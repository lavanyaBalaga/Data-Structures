//circular LinkedLists Operations.....//


#include<stdio.h>
#include<stdlib.h>
typedef struct Node
{
   int data;
   struct Node *next;
}SN;
SN* create_Node(int data)
{
   SN *temp=(SN*)malloc(sizeof(SN));
   temp->data=data;
   temp->next=NULL;
   return temp;
}
SN* create_list()
{
   int n,a;
   printf("\nenter length of list :");
   scanf("%d",&n);
   SN *newn,*head;
   printf("\n enter element 1 : ");
   scanf("%d",&a);
   newn=create_Node(a);
   head=newn;
   for(int i=2;i<=n;i++)
   {
       printf("\n enter element %d : ",i);
       scanf("%d",&a);
       newn->next=create_Node(a);
       newn=newn->next;
   }
   newn->next=head;
   return head;
}
SN* print(SN *head)
{
   SN *temp;
   printf("%d ",head->data);
   temp=head->next;
   while(temp!=head)
   {
       printf("%d ",temp->data);
       temp=temp->next;
   }
   return head;
}
SN* insert(SN *head,int pos,int data)
{
   SN *temp=head,*newn;
   if(pos==0)
   {
       while(temp->next!=head){temp=temp->next;}
       newn=create_Node(data);
       temp->next=newn;
       newn->next=head;
       head=newn;
   }
   else if(pos==1)
   {
       newn=create_Node(data);
       newn->next=head->next;
       head->next=newn;
   }
   else
   {
       for(int i=1;i<pos;i++){temp=temp->next;}
       newn=create_Node(data);
       newn->next=temp->next;
       temp->next=newn;
   }
   return head;
}
SN* delete(SN *head,int pos)
{
    SN *temp=head;
    if(pos==0)
    {
        while(temp->next!=head){temp=temp->next;}
        temp->next=temp->next->next;
        head=temp->next;
    }
    else
    {
        for(int i=1;i<pos;i++){temp=temp->next;}
        temp->next=temp->next->next;
        return head;
    }
}
int main()
{
   SN *head=create_list();
   print(head);
   head=insert(head,0,11);
   printf("\n");
   print(head);
   head=delete(head,0);
   printf("\n");
   print(head);
}
